---
- block:
  - name: "Create group for Master User"
    become: yes
    group:
      name: "{{ master_group }}"
      gid: "{{ master_gid }}"
      state: present

  - name: "Create Master User"
    become: yes
    user:
      name: "{{ master_user }}"
      uid: "{{ master_uid }}"
      group: "{{ master_group }}"
      groups:
        - "{{ master_group }}"
      home: "/home/{{ master_user }}"
      create_home: yes
      password_lock: yes
      shell: /bin/bash
      state: present
      comment: "Master of Ygdrassil"

  - name: "Create SSH path for Master User"
    become: yes
    file:
      path: "/home/{{ master_user }}/.ssh"
      mode: 0755
      owner: "{{ master_user }}"
      group: "{{ master_group }}"
      state: directory

  - name: "Deploy RSA pubkey for Master User"
    become: yes
    copy:
      content: "{{ master_rsa_pubkey }}"
      dest: "/home/{{ master_user }}/.ssh/authorized_keys"
      mode: 0644
      owner: "{{ master_user }}"
      group: "{{ master_group }}"

  - name: "Deploy sudoers config"
    become: yes
    template:
      src: templates/sudoers.j2
      dest: /etc/sudoers.d/99-ygdrassil-users
      owner: root
      group: root
      mode: 0444

  - name: "Disable root login"
    become: yes
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: PermitRootLogin no
    register: disableroot

  - name: "Restart SSH Service if needed"
    become: yes
    service:
      name: sshd
      state: restarted
      enabled: yes
    when: disableroot.changed

  tags:
    - bootstrap
    - master-user

- block:
  - name: "Install packages"
    become: yes
    package:
      name:
        - fail2ban
      state: present

  - name: "Configure Fail2Ban SSH jail"
    become: yes
    template:
      src: templates/fail2ban.j2
      dest: /etc/fail2ban/jail.local
      owner: root
      group: root
      mode: 0644
    register: fail2banconf
  
  - name: "Restart and enable Fail2Ban service"
    become: yes
    service:
      name: fail2ban
      state: restarted
      enabled: yes
    when: fail2banconf.changed

  - name: Change to cool motd
    become: yes
    template:
      src: templates/motd.j2
      dest: /etc/motd
      owner: root
      group: root
      mode: 0644

  rescue:    
    - fail:
        msg: "Please run again without root user"

  tags:
    - bootstrap
    - fail2ban

- block:
  - name: Create temp directory
    delegate_to: 127.0.0.1
    tempfile:
      state: directory
      suffix: _helm
    register: helm_temp
  
  - name: "Download Helm binary in temp path {{ helm_temp.path }}"
    delegate_to: 127.0.0.1
    get_url:
      url: "https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz"
      dest: "{{ helm_temp.path }}"

  - name: Unarchive package in temp path
    delegate_to: 127.0.0.1
    unarchive:
      src: "{{ helm_temp.path }}/helm-v{{ helm_version }}-linux-amd64.tar.gz"
      dest: "{{ helm_temp.path }}"
  
  - name: Upload Helm to nodes
    become: yes
    copy:
      src: "{{ helm_temp.path }}/linux-amd64/helm"
      dest: /usr/local/bin/helm
      owner: root
      group: root
      mode: 0755

  rescue:
    - fail:
        msg: "Something went wrong"

  always:
    - name: "Remove temporal path {{ helm_temp.path }}"
      delegate_to: 127.0.0.1
      file:
        path: "{{ helm_temp.path }}"
        state: absent

  tags:
    - bootstrap
    - helm