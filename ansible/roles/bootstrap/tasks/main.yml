---
- block:
  - name: "Upgrade APT database"
    become: yes
    apt:
      update-cache: yes

  - name: "Install packages"
    become: yes
    package:
      name:
        - python3-setuptools
        - python3-pip
        - python3-grpcio
        - python3-yaml
        - python3-openshift
        - python3-pyasn1
        - python3-systemd
        - rsyslog
        - fail2ban
        - apparmor
      state: present

  tags:
    - bootstrap
    - dependencies

- block:
  - name: "Create group for Master User"
    become: yes
    group:
      name: "{{ master_group }}"
      gid: "{{ master_gid }}"
      state: present

  - name: "Create Master User"
    become: yes
    user:
      name: "{{ master_user }}"
      uid: "{{ master_uid }}"
      group: "{{ master_group }}"
      groups:
        - "{{ master_group }}"
      home: "/home/{{ master_user }}"
      create_home: yes
      password_lock: yes
      shell: /bin/bash
      state: present
      comment: "Master of Ygdrassil"

  - name: "Create SSH path for Master User"
    become: yes
    file:
      path: "/home/{{ master_user }}/.ssh"
      mode: 0755
      owner: "{{ master_user }}"
      group: "{{ master_group }}"
      state: directory

  - name: "Deploy RSA pubkey for Master User"
    become: yes
    copy:
      content: "{{ master_rsa_pubkey }}"
      dest: "/home/{{ master_user }}/.ssh/authorized_keys"
      mode: 0644
      owner: "{{ master_user }}"
      group: "{{ master_group }}"

  - name: "Deploy sudoers config"
    become: yes
    template:
      src: templates/sudoers.j2
      dest: /etc/sudoers.d/99-ygdrassil-users
      owner: root
      group: root
      mode: 0444

  - name: "Disable root login"
    become: yes
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: PermitRootLogin no
    register: disableroot

  - name: "Enable SSH logging for Fail2Ban"
    become: yes
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '#{{ item }}'
      line: "{{ item }}"
    with_items:
      - "SyslogFacility AUTH"
      - "LogLevel INFO"
    register: enableauth

  - name: "Restart SSH Service if needed"
    become: yes
    service:
      name: ssh
      state: restarted
      enabled: yes
    when: disableroot.changed or enableauth.changed

  tags:
    - bootstrap
    - master-user

- block:
  - name: Enable kernel IPv4 forwarding
    become: yes
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: yes
      state: present
      reload: yes
    tags:
      - molecule-notest

  - name: "Enable kernel modules required for flannel"
    become: yes
    modprobe:
      name: br_netfilter
      state: present

  - name: "Persist kernel modules activation required for flannel"
    become: yes
    copy:
      dest: "/etc/modules-load.d/br_netfilter.conf"
      content: |
        br_netfilter

  tags:
    - bootstrap
    - kernel

- block:
  - name: "Configure Fail2Ban SSH jail"
    become: yes
    template:
      src: templates/fail2ban.j2
      dest: /etc/fail2ban/jail.local
      owner: root
      group: root
      mode: 0644
    register: fail2banconf
  
  - name: "Restart and enable Fail2Ban service"
    become: yes
    service:
      name: fail2ban
      state: restarted
      enabled: yes
    when: fail2banconf.changed

  - name: Change to cool motd
    become: yes
    template:
      src: templates/motd.j2
      dest: /etc/motd
      owner: root
      group: root
      mode: 0644

  rescue:    
    - fail:
        msg: "Please run again without root user"

  tags:
    - bootstrap
    - fail2ban

- block:
  - name: "Logout from all possible opened MEGA sessions"
    shell: 'mega-logout'
    ignore_errors: true

  - name: "Install MegaCMD"
    become: yes
    apt:
      deb: https://mega.nz/linux/repo/Debian_12/amd64/megacmd-Debian_12_amd64.deb

  - name: "Create MEGACMD server Systemd Service"
    become: yes
    template:
      src: mega-cmd-server.service.j2
      dest: /lib/systemd/system/mega-cmd-server.service
      owner: root
      group: root
      mode: '0644'

  - name: "Symlink systemd unit"
    become: yes
    file:
      src: /lib/systemd/system/mega-cmd-server.service
      dest: /etc/systemd/system/multi-user.target.wants/mega-cmd-server.service
      owner: root
      group: root
      mode: '0644'
      state: link

  - name: "Enable and run MEGA-CMD-SERVER"
    become: yes
    systemd_service:
      daemon_reload: true
      name: mega-cmd-server
      enabled: true
      state: started
      masked: no

  - name: "Login to MEGA"
    shell: "mega-login {{ mega_user }} {{ mega_pass }}"

  - name: "Ensure backup folder exists in MEGA"
    shell: 'mega-mkdir /ygdrassil/backup -p'
    ignore_errors: true

  - name: "Define backup schedule in MEGA"
    shell: 'mega-backup /mnt /ygdrassil/backup --period="0 0 1 * * *" --num-backups=7'
    ignore_errors: true

  - name: "Request list backups defined in MEGA"
    shell: 'mega-backup -l'
    register: backup_list

  - name: "Request history of backups in MEGA"
    shell: 'mega-backup -h'
    register: backup_history

  - name: "List of backups defined in MEGA"
    debug:
      var: backup_list.stdout_lines

  - name: "History of backups defined in MEGA"
    debug:
      var: backup_history.stdout_lines

  rescue:
    - fail:
        msg: "Failed, please check MEGA configuration"

  tags:
    - bootstrap
    - backup
